
// Code your design here
  module full_adder(
    input a , b , c ,
    output sum , cout 
  );
     assign {cout, sum} = a + b + c ;  
    
endmodule



  module bit8_adder (
      input [7:0] a , b ,
      input Cin ,
      output [7:0] sum ,
      output cout


    );

    wire [7:0] c;
    wire propogate ;
    
    assign propogate = &(a ^ b) ;

    full_adder f0(a[0],b[0],Cin,  sum[0],c[0]);
    full_adder f1(a[1] ,b[1],c[0], sum[1],c[1]);
    full_adder f2(a[2],b[2],c[1],  sum[2],c[2]);
    full_adder f3(a[3],b[3],c[2],  sum[3],c[3]);
    full_adder f4(a[4],b[4],c[3],  sum[4],c[4]);
    full_adder f5(a[5],b[5],c[4],  sum[5],c[5]);
    full_adder f6(a[6],b[6],c[5],  sum[6],c[6]);
    full_adder f7(a[7],b[7],c[6],  sum[7],c[7]);
    
    

    assign cout = propogate ? Cin : c[7]  ;

  endmodule

module cba_32bit (
  input [31:0] a , b ,
  input cin ,
  output [31:0] sum ,
  output cout 
);
  
  wire [2:0] c ;
  
  bit8_adder b0(a[7:0] , b[7:0] , cin , sum[7:0] , c[0]) ;
  bit8_adder b1(a[15:8] , b[15:8] , c[0] , sum[15:8] , c[1]) ;
  bit8_adder b2(a[23:16] , b[23:16] , c[1] , sum[23:16] , c[2]) ;
  bit8_adder b3(a[31:24] , b[31:24] , c[2] , sum[31:24] , cout) ;
  
endmodule
